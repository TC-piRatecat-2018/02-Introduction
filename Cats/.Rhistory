head(alberta$starttime)
quarter(alberta$starttime)
quarter(alberta$starttime, fiscal_start = 7)
# Aggregate volume by fiscal year, July through June
alberta_fy <- alberta %>%
group_by(quarter(starttime, fiscal_start = 7)) %>%
summarise(fy_volume = cumsum(volume))
# Aggregate volume by fiscal year, July through June
alberta_fy <- alberta %>%
group_by(quarter(starttime, fiscal_start = 7)) %>%
summarise(fy_volume = volume)
# Aggregate volume by fiscal year, July through June
alberta_fy <- alberta %>%
group_by(quarter(starttime, fiscal_start = 7)) %>%
mutate(fy_volume = cumsum(volume))
View(alberta_fy)
# Aggregate volume by fiscal year, July through June
alberta_fy <- alberta %>%
group_by(year = year(starttime), quarter = quarter(starttime, fiscal_start = 7)) %>%
mutate(fy_volume = cumsum(volume))
alberta_qt <- alberta %>%
group_by(year = year(starttime), quarter = quarter(starttime, fiscal_start = 7)) %>%
mutate(qt_volume = cumsum(volume))
# Aggregate volume by fiscal year, July through June
alberta_qt <- alberta %>%
mutate(year = year(starttime), quarter = quarter(starttime, fiscal_start = 7))
View(alberta_qt)
# Aggregate volume by fiscal year, July through June
alberta_qt <- alberta %>%
group_by(year = year(starttime), quarter = quarter(starttime, fiscal_start = 7)) %>%
summarise(qt_volume = sum(volume))
View(alberta_qt)
# Aggregate volume by fiscal year, July through June
alberta_qt <- alberta %>%
mutate(year = year(starttime), quarter = quarter(starttime, fiscal_start = 7))
# Aggregate volume by fiscal year, July through June
fiscal.start <- ymd("2004-12-01")
# Aggregate volume by fiscal year, July through June
albert.start <- ymd("2004-12-01")
fiscal.start <- ymd("2005-07-01")
years(2)
alberta_x <- alberta %>%
mutate(fy = starttime+years(1))
View(alberta_x)
alberta_x <- alberta %>%
mutate(fy = starttime - fiscal.start)
View(alberta_qt)
table(alberta_qt$year)
table(alberta_year$year)
alberta_year <- alberta %>%
mutate(year = year(starttime))
table(alberta_year$year)
alberta <- alberta_year %>%
filter(!year %in% c("2004", "2018"))
View(alberta)
alberta <- alberta_year %>%
filter(year > "2005-07-01", year < "2015-07-01")
# Aggregate volume by fiscal year, July through June
alberta$fy.adjust <- seq(ymd("2005-01-01"), by = "year")
# Aggregate volume by fiscal year, July through June
alberta$fy.adjust <- seq(ymd("2005-01-01"), ymd("2014-12-31"), by = "year")
# Aggregate volume by fiscal year, July through June
alberta$fy.adjust <- seq(ymd("2005-01-01"), ymd("2014-12-31"), by = "month")
alberta <- alberta_year %>%
filter(year > "2005-07-01" & year < "2015-07-01")
# Read in data files.
alberta_raw <- read.csv("data/I5-NB-Alberta.csv", stringsAsFactors = F, strip.white = T)
# Delete rows of incomplete data
alberta <- alberta_raw[complete.cases(alberta_raw),]
# Convert "starttime" into class POSIXct
alberta$starttime <- mdy_hm(alberta$starttime, tz = "America/Los_Angeles")
# Check for completeness of data
alberta_year <- alberta %>%
mutate(year = year(starttime))
# Aggregate volume by fiscal year, July through June
alberta$fy.adjust <- seq(ymd("2005-01-01"), ymd("2014-12-31"), by = "month")
View(alberta_fy)
alberta_fy <- alberta_year %>%
filter(year > "2005-07-01" & year < "2015-07-01")
View(alberta_fy)
alberta_fy <- alberta_year %>%
filter(starttime > "2005-07-01" & startime < "2015-07-01")
alberta_fy <- alberta_year %>%
filter(starttime > "2005-07-01" & starttime < "2015-07-01")
alberta_fy <- alberta_year %>%
filter(starttime > "2005-06-30" & starttime < "2015-07-01")
# Aggregate volume by fiscal year, July through June
alberta_fy$fy.adjust <- seq(ymd("2005-01-01"), ymd("2014-12-31"), by = "month")
alberta_fy <- alberta_fy %>%
group_by(fy.year = year(fy.adjust)) %>%
summarise(fy.volume = sum(volume))
910+831+875+843+880+895+803+643+515+727+611+1
str(alberta_fy)
View(alberta_fy)
alberta_fy
str(cat_raw)
str(cats_raw)
cats <- cats_raw %>%
filter(Fiscal.Year == (2005 | 2014))
cats <- cats_raw %>%
filter(Fiscal.Year > 2004 & < 2015)
cats <- cats_raw %>%
filter(Fiscal.Year > "2004" & < "2015")
filter(between(Fiscal.Year, 2004, 2015)
cats <- cats_raw %>%
str(cats_raw)
cats <- cats_raw %>%
filter(between(Fiscal.Year, "2004", "2015"))
cats <- cats_raw %>%
filter(between(Fiscal.Year, 2004, 2015))
View(cats)
cats <- cats_raw %>%
filter(between(Fiscal.Year, 2005, 2014))
alberta_fy <- alberta_year %>%
filter(starttime > "2005-06-30" & starttime < "2015-07-01")
# Creative way of Aggregating volume by fiscal year, July through June
alberta_fy$fy.adjust <- seq(ymd("2005-01-01"), ymd("2014-12-31"), by = "month")
alberta_fy <- alberta_fy %>%
group_by(Fiscal.Year = year(fy.adjust)) %>%
summarise(FY.Volume = sum(volume))
alberta_fy
cats
alberta_cats <- left_join(alberta_fy, cats, by = "Fiscal.Year")
View(alberta_cats)
alberta_cats_fig <- alberta_cats %>%
ggplot(aes(x = Adopt, y = "FY.Volume"))+
geom_point()
plot(alberta_cats_fig)
str(alberta_cats)
alberta_cats_fig <- alberta_cats %>%
ggplot(aes(x = Adopt, y = FY.Volume))+
geom_point()
plot(alberta_cats_fig)
# Load libraries needed for tidying data.
library(tidyverse)
library(lubridate)
# Read in data files.
alberta_raw <- read.csv("data/I5-NB-Alberta.csv", stringsAsFactors = F, strip.white = T)
cats_raw <- read.csv("data/cats.csv", stringsAsFactors = F, strip.white = T)
# Examine traffic data structure.
str(alberta_raw)
# Delete rows of incomplete data
alberta <- alberta_raw[complete.cases(alberta_raw),]
# Convert "starttime" into class POSIXct
alberta$starttime <- mdy_hm(alberta$starttime, tz = "America/Los_Angeles")
# Check for completeness of data
alberta_year <- alberta %>%
mutate(year = year(starttime))
table(alberta_year$year)
alberta_fy <- alberta_year %>%
filter(starttime > "2005-06-30" & starttime < "2015-07-01")
# Creative way of aggregating volume by fiscal year, July through June
alberta_fy$fy.adjust <- seq(ymd("2005-01-01"), ymd("2014-12-31"), by = "month")
alberta_fy <- alberta_fy %>%
group_by(Fiscal.Year = year(fy.adjust)) %>%
summarise(FY.Volume = sum(volume))
alberta_fy
# Examine cat data
str(cats_raw)
# Filter cat data for available years corresponding to traffic data.
cats <- cats_raw %>%
filter(between(Fiscal.Year, 2005, 2014))
cats
alberta_cats <- left_join(alberta_fy, cats, by = "Fiscal.Year")
alberta_cats_fig <- alberta_cats %>%
ggplot(aes(x = Adopt, y = FY.Volume))+
geom_point()
plot(alberta_cats_fig)
View(alberta_cats)
# Volume of cars over time
fy_volume_fig <- alberta_cats %>%
ggplot(aes(x = Fiscal.Year, y = FY.Volume)) +
geom_bar()
plot(fy_volume_fig)
# Volume of cars over time
fy_volume_fig <- alberta_cats %>%
ggplot(aes(x = Fiscal.Year, y = FY.Volume)) +
geom_bar(stat = "identity")
plot(fy_volume_fig)
str(alberta_cats)
alberta_cats$Fiscal.Year <- as.character(alberta_cats$Fiscal.Year)
# Volume of cars over time
fy_volume_fig <- alberta_cats %>%
ggplot(aes(x = Fiscal.Year, y = FY.Volume)) +
geom_bar(stat = "identity")
plot(fy_volume_fig)
trans_cats <- alberta_cats %>%
gather("variable", "count", 2:4)
trans_cats
library(DT)
install.packages("devtools")
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px",
options = list(
searching = F,
pageLength = 10,
lengthMenu = c(5, 10, 15, 20),
scrollX = "600px"
))
# DT::formatStyle(columns = c("Source", "Type", "Agency", "Detection.Type", "Available.Granularity",
# "Date.Range", "Accessibility", "Location.Availability", "Installation.Type", "Collection.Frequency",
# "Documentation"), fontSize = '10px')
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px")
options(DT.fillContainer = T)
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px")
?DT
DT?
?datatable
install.packages(c("caTools", "dbplyr", "foreign", "httpuv", "Rcpp", "stringi", "yaml"))
options(DT.fillContainer = T)
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px")
options(DT.fillContainer = T)
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px")
options(DT.fillContainer = T)
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px",
options = list(
searching = F,
pageLength = 5,
scrollX = "600px"
))
options(DT.fillContainer = T)
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px",
options = list(
searching = F,
pageLength = 30
))
# Dataframe structure after using dplyr::gather
options(DT.fillContainer = T)
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px",
options = list(
searching = F,
pageLength = 30
))
is.data.frame(alberta_cats)
# Fiscal year trends of total cat intake, cat adoptions, and car volume over time
fy_trends_fig <- trans_cats %>%
ggplot(aes(x = Fiscal.Year, y = count)) +
geom_bar(stat = "identity") +
facet_grid(variable ~ .)
fy_trends_fig
# Fiscal year trends of total cat intake, cat adoptions, and car volume over time
fy_trends_fig <- trans_cats %>%
ggplot(aes(x = Fiscal.Year, y = count)) +
geom_bar(stat = "identity") +
facet_grid(variable ~ ., scales = "free")
fy_trends_fig
alberta_raw <- read.csv("data/I5-NB-Alberta.csv", stringsAsFactors = F, strip.white = T)
cats_raw <- read.csv("data/cats.csv", stringsAsFactors = F, strip.white = T)
# Examine traffic data structure.
str(alberta_raw)
# Delete rows of incomplete data
alberta <- alberta_raw[complete.cases(alberta_raw),]
# Convert "starttime" into class POSIXct
alberta$starttime <- mdy_hm(alberta$starttime, tz = "America/Los_Angeles")
# Check for completeness of data
alberta_year <- alberta %>%
mutate(year = year(starttime))
table(alberta_year$year)
alberta_fy <- alberta_year %>%
filter(starttime > "2005-06-30" & starttime < "2015-07-01")
# Creative way of aggregating volume by fiscal year, July through June
alberta_fy$fy.adjust <- seq(ymd("2005-01-01"), ymd("2014-12-31"), by = "month")
alberta_fy <- alberta_fy %>%
group_by(Fiscal.Year = year(fy.adjust)) %>%
summarise(FY.Volume = sum(volume))
alberta_fy
# Examine cat data
str(cats_raw)
# Filter cat data for available years corresponding to traffic data.
cats <- cats_raw %>%
filter(between(Fiscal.Year, 2005, 2014))
cats
# There are many ways of combining datasets, the follow example uses dplyr::left_join
alberta_cats <- left_join(alberta_fy, cats, by = "Fiscal.Year")
alberta_cats$Fiscal.Year <- as.character(alberta_cats$Fiscal.Year)
alberta_cats
trans_cats <- alberta_cats %>%
gather("variable", "count", 2:4)
trans_cats
# Fiscal year trends of total cat intake, cat adoptions, and car volume over time
fy_trends_fig <- trans_cats %>%
ggplot(aes(x = Fiscal.Year, y = count)) +
geom_bar(stat = "identity") +
facet_grid(variable ~ ., scales = "free")
fy_trends_fig
fy_volume_fig <- alberta_cats %>%
ggplot(aes(x = Fiscal.Year, y = FY.Volume)) +
geom_bar(stat = "identity")
plot(fy_volume_fig)
alberta_cats_fig <- alberta_cats %>%
ggplot(aes(x = Adopt, y = FY.Volume))+
geom_point()
plot(alberta_cats_fig)
cats_raw <- read.csv("data/cats.csv", stringsAsFactors = F, strip.white = T)
# Examine cat data
str(cats_raw)
# Filter cat data for available years corresponding to traffic data.
cats <- cats_raw %>%
filter(between(Fiscal.Year, 2005, 2014))
cats
cats_raw <- read.csv("data/cats.csv", stringsAsFactors = F, strip.white = T)
# Examine cat data
str(cats_raw)
# Filter cat data for available years corresponding to traffic data.
cats <- cats_raw %>%
filter(between(Fiscal.Year, 2005, 2014))
cats
# There are many ways of combining datasets, the follow example uses dplyr::left_join
alberta_cats <- left_join(alberta_fy, cats, by = "Fiscal.Year")
alberta_cats$Fiscal.Year <- as.character(alberta_cats$Fiscal.Year)
alberta_cats
trans_cats <- alberta_cats %>%
gather("variable", "count", 2:4)
trans_cats
# Dataframe structure after using dplyr::gather
options(DT.fillContainer = T)
datatable(trans_cats, rownames = F,
caption = "trans_cats dataframe after using gather function",
width = "600px",
options = list(
searching = F,
pageLength = 30
))
# Fiscal year trends of total cat intake, cat adoptions, and car volume over time
fy_trends_fig <- trans_cats %>%
ggplot(aes(x = Fiscal.Year, y = count)) +
geom_bar(stat = "identity") +
facet_grid(variable ~ ., scales = "free")
fy_trends_fig
fy_volume_fig <- alberta_cats %>%
ggplot(aes(x = Fiscal.Year, y = FY.Volume)) +
geom_bar(stat = "identity")
plot(fy_volume_fig)
alberta_cats_fig <- alberta_cats %>%
ggplot(aes(x = Adopt, y = FY.Volume))+
geom_point()
plot(alberta_cats_fig)
fy_trends_fig
library(devtools)
install_github("Gibbsdavid1/CatterPlots")
install_github("Gibbsdavid1/CatterPlots")
library(CatterPlots)
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume, cat = 3, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume, cat = 2, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume, cat = 4, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume, cat = 7, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume, cat = 6, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume, cat = 11, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume, cat = 10, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 1, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 2, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 4, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#000000FF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.1, -0.1, 1.1))
# Fiscal year trends of total cat intake, cat adoptions, and car volume over time
fy_trends_fig <- trans_cats %>%
ggplot(aes(x = Fiscal.Year, y = count)) +
geom_bar(stat = "identity") +
facet_grid(variable ~ ., scales = "free")
fy_trends_fig
x <- (alberta_cats$Adopt)/1000
y <- (alberta_cats$FY.Volume)/1000
cars_adopt_figure <- catplot(xs = x, ys = y,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.1, -0.1, 1.1),
xlab = "Cat adoptions (thousands)", ylab = "Volume of cars (thousands")
cars_adopt_figure <- catplot(xs = x, ys = y,
cat = 5, catcolor = "#33FCFF",
canvas = c(-1, 1.1, -0.1, 1.1),
xlab = "Cat adoptions (thousands)", ylab = "Volume of cars (thousands")
cars_adopt_figure <- catplot(xs = x, ys = y,
cat = 5, catcolor = "#33FCFF",
canvas = c(0, 1.1, -0.1, 1.1),
xlab = "Cat adoptions (thousands)", ylab = "Volume of cars (thousands")
cars_adopt_figure <- catplot(xs = x, ys = y,
cat = 5, catcolor = "#33FCFF",
canvas = c(1.1, 1.1, -0.1, 1.1),
xlab = "Cat adoptions (thousands)", ylab = "Volume of cars (thousands")
cars_adopt_figure <- catplot(xs = x, ys = y,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.8, 1.1, -0.1, 1.1),
xlab = "Cat adoptions (thousands)", ylab = "Volume of cars (thousands")
cars_adopt_figure <- catplot(xs = x, ys = y,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.9, 1.1, -0.1, 1.1),
xlab = "Cat adoptions (thousands)", ylab = "Volume of cars (thousands")
cars_adopt_figure <- catplot(xs = x, ys = y,
cat = 5, catcolor = "#33FCFF",
# canvas = c(-0.9, 1.1, -0.1, 1.1),
xlab = "Cat adoptions (thousands)", ylab = "Volume of cars (thousands")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
# canvas = c(-0.9, 1.1, -0.1, 1.1),
xlab = "Cat adoptions (thousands)", ylab = "Volume of cars (thousands")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
# canvas = c(-0.9, 1.1, -0.1, 1.1),
xlab = "Cat adoptions", ylab = "Volume of cars")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.1, -0.1, 1.1),
xlab = "Cat adoptions", ylab = "Volume of cars")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1, -0.1, 1),
xlab = "Cat adoptions", ylab = "Volume of cars")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.1, -0.1, 1.1),
xlab = "Cat adoptions", ylab = "Volume of cars")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.1, -0.1, 1),
xlab = "Cat adoptions", ylab = "Volume of cars")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.1, -0.1, 1.5),
xlab = "Cat adoptions", ylab = "Volume of cars")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.1, -0.1, 1.2),
xlab = "Cat adoptions", ylab = "Volume of cars")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.2, -0.1, 1.2),
xlab = "Cat adoptions", ylab = "Volume of cars")
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF",
canvas = c(-0.1, 1.8, -0.1, 1.2),
xlab = "Cat adoptions", ylab = "Volume of cars")
# Plotting relationship between intake of live cats and volume of cars uses the alberta_cats dataframe
cars_adopt_figure <- alberta_cats %>%
ggplot(aes(x = Total.Live.Intake, y = FY.Volume)) +
geom_point()
cars_adopt_figure
?element_test
?element_text
# Fiscal year trends of total cat intake, cat adoptions, and car volume over time using trans_cats
fy_trends_fig <- trans_cats %>%
ggplot(aes(x = Fiscal.Year, y = count)) +
geom_bar(stat = "identity") +
facet_grid(variable ~ ., scales = "free") +
ggtitle("Figure 1. Cat adoptions, volume of cars (FY.Volume), and total live intake of cats (Total.Live.Intake)") +
theme(plot.title = element_text(size = 8))
fy_trends_fig
?catcolor
# Plotting relationship between cat adoptions and volume of cars uses the alberta_cats dataframe
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF", size = 5,
canvas = c(-0.1, 1.8, -0.1, 1.2),
xlab = "Cat adoptions", ylab = "Volume of cars")
# Plotting relationship between cat adoptions and volume of cars uses the alberta_cats dataframe
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF", size = 1,
canvas = c(-0.1, 1.8, -0.1, 1.2),
xlab = "Cat adoptions", ylab = "Volume of cars")
# Plotting relationship between cat adoptions and volume of cars uses the alberta_cats dataframe
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF", size = 0.2,
canvas = c(-0.1, 1.8, -0.1, 1.2),
xlab = "Cat adoptions", ylab = "Volume of cars")
# Plotting relationship between cat adoptions and volume of cars uses the alberta_cats dataframe
cars_adopt_figure <- catplot(xs = alberta_cats$Adopt, ys = alberta_cats$FY.Volume,
cat = 5, catcolor = "#33FCFF", size = 0.2,
canvas = c(-0.1, 1.8, -0.1, 1.2),
xlab = "Cat adoptions", ylab = "Volume of cars",
main = "Figure 2. Cat adoptions versus volume of cars")
# Plotting relationship between intake of live cats and volume of cars uses the alberta_cats dataframe
cars_adopt_figure <- alberta_cats %>%
ggplot(aes(x = Total.Live.Intake, y = FY.Volume)) +
geom_point() +
labs(title = "Figure 3. Total live intake of cats versus volume of cars",
x = "Total live intake of cats", y = "Volume of cars") +
theme(plot.title = element_text(size = 8))
cars_adopt_figure
lm_cats <- lm(Total.Live.Intake ~ FY.Volume, data = alberta_cats)
lm_cats
summary(lm_cats)
cor(alberta_cats$Total.Live.Intake, alberta_cats$FY.Volume)
lm_cats <- lm(Total.Live.Intake ~ FY.Volume, data = alberta_cats)
lm_cats
lm_cats <- lm(FY.Volume ~ Total.Live.Intake, data = alberta_cats)
lm_cats
summary(lm_cats)
install.packages("DT")
install.packages("devtools")
install_github("Gibbsdavidl/CatterPlots")
library(devtools)
install_github("Gibbsdavidl/CatterPlots")
